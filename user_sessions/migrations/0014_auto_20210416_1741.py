# Generated by Django 2.2.13 on 2021-04-16 23:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('programs', '0009_auto_20210416_1741'),
        ('instances', '0020_auto_20210416_1741'),
        ('attributes', '0005_attribute_attribute_view'),
        ('entities', '0003_auto_20200329_1028'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('licences', '0001_initial'),
        ('messenger_users', '0012_auto_20210416_1741'),
        ('areas', '0009_auto_20210416_1741'),
        ('user_sessions', '0013_interaction_text'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssignSequence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence_id', models.IntegerField(default=0)),
                ('start_position', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AvailableService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('url', models.CharField(max_length=200)),
                ('request_type', models.CharField(choices=[('post', 'POST'), ('get', 'GET')], default='post', max_length=5)),
                ('suggested_params', models.CharField(max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='BotSessions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bot_id', models.IntegerField(default=0)),
                ('session_type', models.CharField(choices=[('welcome', 'Welcome'), ('default', 'Default')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Button',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('button_type', models.CharField(blank=True, max_length=20, null=True)),
                ('url', models.CharField(blank=True, max_length=100, null=True)),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('block_names', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(choices=[('equal', 'Equal'), ('not_equal', 'Not equal'), ('in', 'Is in'), ('lt', 'Less than'), ('gt', 'Greater than'), ('lte', 'Less than or equal'), ('gte', 'Greater than or equal'), ('is_set', 'Is set'), ('is_not_set', 'Is not set')], max_length=50)),
                ('value', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attributes.Attribute')),
            ],
        ),
        migrations.CreateModel(
            name='FieldProgramComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='FieldProgramExclusion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Intent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intent_id', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='RedirectSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('available_service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='user_sessions.AvailableService')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceParam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.CharField(max_length=30)),
                ('value', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_sessions.Service')),
            ],
        ),
        migrations.CreateModel(
            name='SetAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attributes.Attribute')),
            ],
        ),
        migrations.CreateModel(
            name='UnsubscribeSequence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence_id', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserInput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('validation', models.CharField(choices=[('phone', 'Phone'), ('email', 'Email'), ('date', 'Date'), ('number', 'Number')], max_length=50, null=True)),
                ('position', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='attributes.Attribute')),
            ],
        ),
        migrations.RemoveField(
            model_name='demographicreply',
            name='demographic',
        ),
        migrations.RemoveField(
            model_name='interaction',
            name='instance_id',
        ),
        migrations.RemoveField(
            model_name='interaction',
            name='user_id',
        ),
        migrations.RemoveField(
            model_name='session',
            name='topics',
        ),
        migrations.AddField(
            model_name='interaction',
            name='instance',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='instances.Instance'),
        ),
        migrations.AddField(
            model_name='interaction',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='messenger_users.User'),
        ),
        migrations.AddField(
            model_name='reply',
            name='position',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='reply',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user_sessions.Session'),
        ),
        migrations.AddField(
            model_name='session',
            name='areas',
            field=models.ManyToManyField(to='areas.Area'),
        ),
        migrations.AddField(
            model_name='session',
            name='entities',
            field=models.ManyToManyField(to='entities.Entity'),
        ),
        migrations.AddField(
            model_name='session',
            name='licences',
            field=models.ManyToManyField(to='licences.License'),
        ),
        migrations.AddField(
            model_name='session',
            name='programs',
            field=models.ManyToManyField(to='programs.Program'),
        ),
        migrations.AlterField(
            model_name='field',
            name='field_type',
            field=models.CharField(choices=[('text', 'Text'), ('quick_replies', 'Quick Replies'), ('buttons', 'Buttons'), ('save_values_block', 'Redirect Chatfuel block'), ('user_input', 'Save user input'), ('image', 'Send image'), ('condition', 'Condition'), ('set_attributes', 'Set Attributes'), ('redirect_session', 'Redirect session'), ('live_chat', 'Send to Live Chat'), ('assign_sequence', 'Subscribe user to Sequence'), ('unsubscribe_sequence', 'Unsubscribe user to Sequence'), ('one_time_notification', 'One Time Notification'), ('activate_ai', 'Activate AI'), ('deactivate_ai', 'Deactivate AI'), ('consume_service', 'Consume service')], max_length=50),
        ),
        migrations.AlterField(
            model_name='interaction',
            name='value',
            field=models.IntegerField(default=0, null=True),
        ),
        migrations.AlterField(
            model_name='reply',
            name='attribute',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='reply',
            name='label',
            field=models.CharField(max_length=50),
        ),
        migrations.DeleteModel(
            name='DemographicQuestion',
        ),
        migrations.DeleteModel(
            name='DemographicReply',
        ),
        migrations.AddField(
            model_name='userinput',
            name='field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_sessions.Field'),
        ),
        migrations.AddField(
            model_name='userinput',
            name='session',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='user_sessions.Session'),
        ),
        migrations.AddField(
            model_name='unsubscribesequence',
            name='field',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user_sessions.Field'),
        ),
        migrations.AddField(
            model_name='setattribute',
            name='field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_sessions.Field'),
        ),
        migrations.AddField(
            model_name='service',
            name='field',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user_sessions.Field'),
        ),
        migrations.AddField(
            model_name='redirectsession',
            name='field',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user_sessions.Field'),
        ),
        migrations.AddField(
            model_name='redirectsession',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_sessions.Session'),
        ),
        migrations.AddField(
            model_name='intent',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_sessions.Session'),
        ),
        migrations.AddField(
            model_name='fieldprogramexclusion',
            name='field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_sessions.Field'),
        ),
        migrations.AddField(
            model_name='fieldprogramexclusion',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='programs.Program'),
        ),
        migrations.AddField(
            model_name='fieldprogramexclusion',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fieldprogramcomment',
            name='field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_sessions.Field'),
        ),
        migrations.AddField(
            model_name='fieldprogramcomment',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='programs.Program'),
        ),
        migrations.AddField(
            model_name='fieldprogramcomment',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='condition',
            name='field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_sessions.Field'),
        ),
        migrations.AddField(
            model_name='button',
            name='field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_sessions.Field'),
        ),
        migrations.AddField(
            model_name='botsessions',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_sessions.Session'),
        ),
        migrations.AddField(
            model_name='assignsequence',
            name='field',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user_sessions.Field'),
        ),
    ]
